---
interface Props {
  title: string;
  description: string;
  technologies: string[];
  link: string;
  code: string;
  starred?: boolean;
}

const { title, description, technologies, link, code, starred } = Astro.props;
---

<article id="project" class="col-span-1 md:col-span-1 lg:col-span-2 row-span-1 rounded-md bg-slate-700/10 border-[1px] border-sky-500/20 p-4 md:p-6">
  <div class="flex flex-col space-y-2">
    <div class="w-full flex items-center justify-between">
      <h3 class="font-headings text-xl font-bold text-white">{title}</h3>
      {
        starred === true ? (
        <svg class="w-5 h-5 fill-white" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><title>Starred Project</title><path d="M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z"/></svg>
        )
        : null
      }
    </div>
    <p class="text-slate-400 text-sm">
      {description}
    </p>
    <div class="flex flex-wrap items-center gap-2 mt-2">
      {
        technologies.map((tech) => (
          <span class="rounded-full border border-slate-400 px-2.5 py-0.5 text-[12px] whitespace-nowrap text-sky-500">
            {tech}
          </span>
        ))
      }
    </div>
  </div>
  <div class="mt-6">
    <a href={code} target="_blank" class="text-sm px-4 py-[6px] rounded-md border-[1px] border-sky-500/20 transition-all duration-30 hover:bg-sky-500/10">
      See code
    </a>
    <a href={link} target="_blank" class="ml-2 text-sm px-4 py-[6px] rounded-md border-[1px] border-sky-500/20 transition-all duration-300 hover:bg-sky-500/10">
      Live Demo
    </a>
  </div>
</article>


<script>
  import { inView, animate } from "motion"

  inView("#project", ((element) => {
    let animationTriggered = false
    if (!animationTriggered) {
      animate(element, 
		{
      y: [100, 0],
      opacity: [0, 1]
		},
		{
			duration: 0.8,
			ease: 'easeIn',
      delay: 0.3
		}
	)
    }
    animationTriggered = true
  }))
</script>